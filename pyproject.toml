[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "pyoda-time"
version = "0.9.3"
description = "An alternative datetime library for Python."
authors = [
    {name = "Chris McEvoy", email = "chris@chrismcevoy.net"},
]
readme = "README.md"
license = { text = "Apache-2.0" }
requires-python = ">=3.12"
dependencies = [
    "pyicu>=2.14",
]
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Typing :: Typed",
]

[project.urls]
Homepage = "https://pyodatime.org/"
Repository = "https://github.com/chrisimcevoy/pyoda-time"
Changelog = "https://github.com/chrisimcevoy/pyoda-time/blob/main/CHANGELOG.md"

[dependency-groups]
dev = [
    "pytest-xdist>=3.6.1",
    "pytest>=8.3.4",
    "pytest-cov>=6.0.0",
    "furo>=2024.8.6",
    "sphinx>=8.1.3",
    "pre-commit<4.0",
    "coverage>=7.6.9",
]

[tool.coverage.report]
exclude_also = [
    "if TYPE_CHECKING:"
]

[tool.docformatter]
black = true
recursive = true
in-place = true
wrap-summaries = 120
wrap-descriptions = 120

[tool.mypy]
disallow_untyped_defs = true
implicit_reexport = false
pretty = true
strict = true
warn_no_return = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true

[tool.ruff]
line-length = 120

[tool.ruff.lint]
fixable = ["ALL"]
ignore = [
    "ANN401",
    "D104",
#    "D202",
    "D203",
    "D205",
    "D209",
    "D210",
    "D211",
    "D212",
    "D213",
    "D400",
    "D401",
    "D404",
    "D405",
    "D410",
    "D413",
    "D415",
    "D418",
    "PLR0911",
    "PLR0912",
    "PLR0913",
    "PLR0915",
    "PLR2004",
    "PLW2901",
    "PYI046",
]
select = [
    "ANN",  # flake8-annotations
    "C4",   # flake8-comprehensions
    "D",    # pydocstyle
    "E",    # pycodestyle (error)
    "F",    # pyflakes
    "FA",   # flake8-future-annotations
    "FURB", # refurb
    "I",    # isort
    "PERF", # perflint
    "PIE",  # flake8-pie
    "PL",   # pylint
    "PYI",  # flake8-pyi
    "RUF",  # ruff
    "T20",  # flake8-print
    "TC",   # flake8-type-checking
    "UP",   # pyupgrade
    "W",    # pycodestyle (warning)
]
unfixable = []

[tool.ruff.lint.per-file-ignores]
"tests/**/*.py" = [
    "D100",
    "D101",
    "D102",
    "D103",
    "D105",
    "D107",
]
